"""
Задание 2.

Реализуйте два алгоритма.

Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.

Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.

Не забудьте указать сложность каждого из двух алгоритмов. Для лучшего закрепления темы
можете определить и указать сложность еще и у каждого выражения этих двух алгоритмов.

Примечание:
Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.

Постарайтесь не использовать ф-ции min() и sort() и другие ф-ции!
Подход должен быть максимально алгоритмическим.
"""
# O(n^2) - квадратичная сложность(вложеннные циклы)
def func_min_1(lst):
    min_number = lst[0]                  # O(1) - константная сложность
    for i in lst:                        # O(n) - линейная сложность
        for j in lst:                    # O(n) - линейная сложность
            if i < j and min_number > i: # O(1) - константная сложность
                min_number = i           # O(1) - константная сложность
    return min_number                    # O(1) - константная сложность

# O(n) - линейная сложность
def func_min_2(lst):
    min_number = lst[0]                  # O(1) - константная сложность
    for i in lst:                        # O(n) - линейная сложность
        if i < min_number:               # O(1) - константная сложность
            min_number = i               # O(1) - константная сложность
    return min_number                    # O(1) - константная сложность


